--[[
lua test script (I tested on http://www.lua.org/cgi-bin/demo for simplicity)

results
    counter = 0
        failure rate: 0.398
    counter = 100
        failure rate: 0.3972
    counter = 1,000
        failure rate: 0.382
    counter = 10,000
        failure rate: 0.2682
    counter = 100,000
        failure rate: 0.1578
--]]
--[[
Test result 2 at newest code:
	counter = 0
        failure rate: 0.2524
    counter = 100
        failure rate: 0.2516
    counter = 1,000
        failure rate: 0.2408
    counter = 10,000
        failure rate: 0.1474
    counter = 100,000
        failure rate: 0.0542
		-- The main problem is, it stays at 5% when you go higher then 100000! i want it to keep lowering till 0.1% (this chance will be around dytech counter at 1-2 million)
		--but thats to figure out still :P

		TEST 3!
	counter = 0
        failure rate: 1 --kinda good, but pretty hard setting :P
    counter = 100
        failure rate: 1 --just play wrong xD 100% chance for people to stop playing DyTech xD (there are a few unlocks in the 1000 range, and 1 unlock under 100)
    counter = 1,000
        failure rate: 1 --WRONG! TO HIGH!
    counter = 10,000
        failure rate: 1 -- TO HIGH!
    counter = 100,000
        failure rate: 0.2504 --Good, but still to high was thinking around 5% chance here
	counter = 1,000,000
		failure rate: 0.006 --exactly what i want. this needs to stay the same!

-- test code below
function DynamicFailure(counter)
	local basePercent = 20050 
    local minModifier = 20048 
    local modifier = 250000000 
    local normalCounter = minModifier*((counter/math.pow((math.pow(counter,2)+modifier), 0.5)))
    if math.random(1000)<(basePercent+1-normalCounter) then
        return true
    else
        return false
    end
end

counts = {}
counts["true"]=0
counts["false"]=0

for i=1, 5000 do
  if DynamicFailure(100000000) then
    counts["true"]=counts["true"]+1
  else
    counts["false"]=counts["false"]+1
  end
end

print("true results: "..counts["true"])
print("false results: "..counts["false"])
print("Percent true, aka failure rate: "..counts["true"]/(counts["true"]+counts["false"]))